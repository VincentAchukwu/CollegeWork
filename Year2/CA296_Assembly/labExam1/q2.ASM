; nice job. What I would consider here is whetehr the code could be made shorter.
; you have duplicated a lot of things; like getting user input etc. Using 
; a few more cmps, you might have been able to read in a value,
; check the value
; this is the same in both cases first and second number.
; once you have two, do some comparison etc.
; this part of your code was very good.
; overall nice job.

IN 00			; GET VALUE FROM KEYBOARD
SUB AL,30		; CONVERT FROM ASCII TO THE ACTUAL NUMBER TYPED (i.e 39 = 9, 34 = 4 etc)
MOV BL,0		; COMPARISON REGISTER, TO CHECK IF AL IS A NUMBER 0 TO 9
MOV CL,C0		; FOR VDU
FIRST_NUM:		; CHECKING FIRST NUMBER ENTERED
	CMP AL,BL	; IS IT IN BL
	JZ SAVE		; IF SO WE SAVE IT
	INC BL		; ELSE WE KEEP CHECKING
	CMP BL,A	; MAKE SURE WE HAVEN'T PASSED DIGIT 9
	JNZ FIRST_NUM	; KEEP GOING WHILE WE HAVEN'T PASSED DIGIT 9
	IN 00		; IF WE DID, MEANS USER DIDN'T ENTER A DIGIT, WE ASK THEM TO ENTER AGAIN
	SUB AL,30	; CONVERT FROM ASCII TO NUMBER
	MOV BL,0	; START COMPARISON AGAIN
	JMP FIRST_NUM	; LOOP

SAVE:
	PUSH AL		; SAVE IT INTO DL
	POP DL
	IN 00		; GET NEXT NUMBER
	SUB AL,30	; CONVERT FROM ASCII TO NUMBER
	MOV BL,0	; START COMPARISON
	JMP NEXT_NUM	; CHECK IF IT'S A NUMBER

NEXT_NUM:
	CMP AL,BL	; SAME PROCEDURE AS FIRST_NUM LOOP
	JZ COMPARE	; EXCEPT IF WE FIND A MATCH, WE COMPARE WHICH IS SMALLER
			; BETWEEN THE 2 NUMBERS
	INC BL
	CMP BL,A
	JNZ NEXT_NUM
	IN 00
	SUB AL,30
	MOV BL,0
	JMP NEXT_NUM

COMPARE:
	CMP AL,DL	; IF AL IS SMALLER WE GO TO SEPARATE LABEL TO DISPLAY IT TO VDU
	JS AL_SMALLER
	PUSH DL		; ELSE THAT MEANS D IS SMALLER
	POP AL		; MOV IT INTO DL
	ADD AL,30	; CONVERT BACK INTO ASCII
	MOV [CL],AL	; DISPLAY TO VDU
	JMP ENDING	; JUMP TO END PROGRAM

AL_SMALLER:
	ADD AL,30	; CONVERT TO ASCII VALUE
	MOV [CL],AL	; DISPLAY TO VDU

ENDING:
	END		; END


; COULD HAVE COMBINED THE LOGIC IN THE TWO LABELS THAT DO THE EXACT SAME THING (i.e: FIRST_NUM and NEXT_NUM)