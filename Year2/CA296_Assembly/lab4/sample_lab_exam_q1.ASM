ORG C0
DB 48
DB 65
DB 4C
DB 6C
DB 4F
DB 20
DB 77
DB 4F
DB 72
DB 4C
DB 64
DB 0

ORG 0
MOV AL,41		; UPPERCASES
MOV BL,61		; LOWERCASES
MOV CL,C0		; POINTER IN VDU
MOV DL,[CL]		; COPY VALUE POINTER POINTS TO INTO DL FOR CMP TO WORK
JMP LOOP
LOOP:
	CMP AL,DL	; IS IT UPPERCASE?
	JZ UPPER_FOUND	; IF SO WE FOUND IT
	CMP BL,DL	; ELSE IS IT LOWERCASE
	JZ LOWER_FOUND	; IF SO WE FOUND IT
	CMP DL,20	; ELSE IS IT A SPACE CHAR
	JZ SKIP		; IF IT IS WE SKIP IT
	INC AL		; ELSE WE CONTINUE
	INC BL
	CMP AL,5B	; IF WE HAVEN'T REACHED END OF ALPHABET
	JNZ LOOP	; KEEP GOING
	;JMP ENDING	; ELSE (IN CASE USER DIDN'T ENTER LETTER) WE END
			; COULD ALSO IMPLEMENT INPUT INSTRUCTION
	; ALSO WHAT IF THE INPUT WAS INITIALLY EMPTY?

SKIP:
	; WE DO NOT INCREMEMNT AL AND BL HERE BECAUSE WE'D END UP SKIPPING
	; AN UPPERCASE/LOWERCASE LETTER WHICH COULD'VE MATCHED IN NEXT ITERATION
	INC CL		; GET NEXT ITEM IN VDU
	MOV DL,[CL]	; CHECK IF WE REACHED END OF STR
	CMP DL,0
	JZ ENDING	; IF SO WE FINISH
	JMP LOOP	; ELSE CONTINUE

UPPER_FOUND:
	MOV [CL],BL	; MOVE LOWERCASE LETTER INTO VDU
	MOV AL,41	; RESET ALPHABET
	MOV BL,61
	INC CL		; NEXT LETTER IN VDU
	MOV DL,[CL]
	CMP DL,0	; CHECK HAVE WE REACHED END
	JNZ LOOP	; IF SO, FINISH
	JMP ENDING	; ELSE CONTINUE

LOWER_FOUND:
	MOV [CL],AL	; SAME HERE, EXCEPT WE REPLACE WITH UPPERCASE CHAR
	MOV AL,41
	MOV BL,61
	INC CL
	MOV DL,[CL]
	CMP DL,0
	JNZ LOOP

ENDING:
	END