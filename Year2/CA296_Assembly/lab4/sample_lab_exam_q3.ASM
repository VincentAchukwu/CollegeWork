IN 0
SUB AL,30
;MOV CL,72
CMP AL,1
JZ RESET		; IF NUMBER IS ONE, RESET
PUSH AL			; ELSE SAVE AL
DIV AL,2		; HALF AL SO WE ONLY DIVIDE BY NUMS <= HCF OF AL
PUSH AL			; GET WHAT HALF AL IS, INTO STACK
POP BL			; HALF AL, PUT INTO BL
POP AL			; ORIGINAL NUMBER BACK TO AL
JMP LOOP
LOOP:
	CMP BL,1	; IF IT'S ONE, WE KNOW THE NUM IS PRIME..
	JZ ENDING	; LOOP WHILE IT'S NOT ONE
	PUSH AL		; COPY AL INTO STACK
	MOD AL,BL	; FIND IF IT DIVIDES EVENLY INTO BL
	JZ RESET	; IF SO, RESET AL AND END
	POP AL		; ELSE, KEEP AL
	DEC BL		; DEC BL TO DIVIDE INTO AL
	JMP LOOP

;GET_AL:
;	POP AL		; GET ORIGINAL AL BACK
;	JMP ENDING	; SINCE IT'S PRIME

RESET:
	MOV AL,FF	; RESET AL TO FF

ENDING:
	END		; ENDS PROGRAM